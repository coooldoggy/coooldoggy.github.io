<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[coooldoggy.dev]]></title><description><![CDATA[coooldoggy.dev]]></description><link>https://coooldoggy.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Fri, 10 Oct 2025 04:05:52 GMT</lastBuildDate><item><title><![CDATA[Android 14 마이그레이션]]></title><link>https://coooldoggy.github.io/android-14-마이그레이션</link><guid isPermaLink="false">https://coooldoggy.github.io/android-14-마이그레이션</guid><pubDate>Fri, 02 Feb 2024 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;안드로이드 14 UpsideDownCake가 나온지 한참 되었지만, 대응에 관한 글이 없어 작성해보고자 한다... 안드로이드 14에서 바뀐 점들이 꽤 많은데 다 나열할 수는 없고 일단 중요한 포인트 들만 나열한다면 이렇게…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/android-14-마이그레이션&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[ProGuard 정리]]></title><link>https://coooldoggy.github.io/pro-guard-정리</link><guid isPermaLink="false">https://coooldoggy.github.io/pro-guard-정리</guid><pubDate>Mon, 14 Mar 2022 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;https://developer.android.com/studio/build/shrink-code?hl=ko 
 https://www.guardsquare.com/en/products/proguard/manual/usage…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/pro-guard-정리&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Flutter로 만드는 사이드프로젝트 삽질기 (작성중)]]></title><link>https://coooldoggy.github.io/flutter로-만드는-사이드프로젝트-삽질기-작성중</link><guid isPermaLink="false">https://coooldoggy.github.io/flutter로-만드는-사이드프로젝트-삽질기-작성중</guid><pubDate>Fri, 17 Dec 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;기획자인 친구와 사이드프로젝트를 진행하게되었는데, 
AOS, IOS를 모두 호환하는 ReactNative, Flutter 중에 어떤 것을 사용할지 고민했다.
처음엔 ReactNative…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/flutter로-만드는-사이드프로젝트-삽질기-작성중&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Jetpack Compose]]></title><link>https://coooldoggy.github.io/jetpack-compose</link><guid isPermaLink="false">https://coooldoggy.github.io/jetpack-compose</guid><pubDate>Mon, 18 Oct 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Jetpack Compse Thinking in Compose Android를 위한 선언형 UI Toolkit  xml이 아닌 kotlin 으로 작성되기 때문에 kotlin 코드 처럼 dynamic 해질 수 있다.  @Composable…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/jetpack-compose&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Seleninum을 이용한 매크로 노예만들기]]></title><link>https://coooldoggy.github.io/seleninum을-이용한-매크로-노예만들기</link><guid isPermaLink="false">https://coooldoggy.github.io/seleninum을-이용한-매크로-노예만들기</guid><pubDate>Thu, 14 Oct 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;QA를 진행할떄 새로운 이슈가 올라오는 것을 확인하려면  페이지 접속 &gt; refresh &gt; 이슈 개수가 늘어났는지 확인하기  의 과정을 거쳐야하는데 .. 다른일하다가 리프레쉬 하기 귀찮아져서 crawler를 만들었다. 언어 선택 nodejs…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/seleninum을-이용한-매크로-노예만들기&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Github Action으로 APK 자동배포하기]]></title><link>https://coooldoggy.github.io/github-action으로-apk-자동배포하기</link><guid isPermaLink="false">https://coooldoggy.github.io/github-action으로-apk-자동배포하기</guid><pubDate>Tue, 03 Nov 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Bitriste로 APK 자동 배포하기  에 이어서 Github의 신기능 Github Action으로 안드로이드 APK를 자동빌드하는 것을 만들어 보았다.   Github Action…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/github-action으로-apk-자동배포하기&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[NodeJs로 사용자 수 알림 SlackBot만들기]]></title><link>https://coooldoggy.github.io/node-js로-사용자-수-알림-slack-bot만들기</link><guid isPermaLink="false">https://coooldoggy.github.io/node-js로-사용자-수-알림-slack-bot만들기</guid><pubDate>Wed, 14 Oct 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;코드작성 아침마다 MySqlWorkbench를 실행해서 사용자수를 쿼리하기 귀찮아서 NodeJs로 사용자 수를 슬랙 메시지로 보내주는 Bot을 만들기로 했다.. NodeJS…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/node-js로-사용자-수-알림-slack-bot만들기&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[TIL0617 - SHA1 디버그용 값구하기]]></title><link>https://coooldoggy.github.io/til-0617-sha-1-디버그용-값구하기</link><guid isPermaLink="false">https://coooldoggy.github.io/til-0617-sha-1-디버그용-값구하기</guid><pubDate>Wed, 17 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;SHA1 Debug 값 구하기 API를 사용하다 보면 SHA1값을 입력해야할 때가 있다. Release모드로 빌드중이라면 아래의 명령어를 안드로이드 스튜디오 커맨드라인에 입력하면 된다. 하지만 대부분의 앱은 개발중에 jks…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/til-0617-sha-1-디버그용-값구하기&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Bitrise로 APK 자동 배포하기]]></title><link>https://coooldoggy.github.io/bitrise로-apk-자동-배포하기</link><guid isPermaLink="false">https://coooldoggy.github.io/bitrise로-apk-자동-배포하기</guid><pubDate>Wed, 01 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Bitrise 회원 가입 및 앱 생성 Bitrise 홈페이지  에 접속해서 회원가입을 진행한다. Add your first app을 눌러 앱 생성을 시작한다. App을 Private으로 할것인지 Public으로 할것인지 선택한 후 git…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/bitrise로-apk-자동-배포하기&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[순서가 있는 UI 처리하기]]></title><link>https://coooldoggy.github.io/순서가-있는-ui-처리하기</link><guid isPermaLink="false">https://coooldoggy.github.io/순서가-있는-ui-처리하기</guid><pubDate>Fri, 13 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Introduction 모바일 앱을 만들다 보면 회원 가입과 같이 순서대로 값을 입력해야 하는 경우가 생긴다. 기존에 JAVA…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/순서가-있는-ui-처리하기&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[OCR API 비교]]></title><link>https://coooldoggy.github.io/ocr-api-비교</link><guid isPermaLink="false">https://coooldoggy.github.io/ocr-api-비교</guid><pubDate>Wed, 12 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;OCR(Optical character recognition)은 사람이 쓰거나 기계로 인쇄한 문자의 영상을 기계가 읽을 수 있는 문자로 변환하는것이다. 최근 ML이 트렌드로 떠오르면서 다양한 기업들에서 이를 기반으로 한 OCR API…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/ocr-api-비교&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[React Native - Components]]></title><link>https://coooldoggy.github.io/react-native-components</link><guid isPermaLink="false">https://coooldoggy.github.io/react-native-components</guid><pubDate>Thu, 30 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;React Native Components React Native에서 사용하는 컴포넌트들에 대한 설명을 정리한다. 공식문서  에서 자세한 설명이나 빠진 부분을 찾아볼 수 있다. Button onPress : Onclick event…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/react-native-components&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[React Study - ES6]]></title><link>https://coooldoggy.github.io/react-study-es-6</link><guid isPermaLink="false">https://coooldoggy.github.io/react-study-es-6</guid><pubDate>Wed, 29 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;ES6 강의에서 친절하게 설명안해줘서 ..설명은  이 글  을 참조하였다. MDN web doc  에서도 자세한 설명들이 많음. Babel 로컬 환경설정 1.  Babel-cli 와 babel-node 설치(web storm) 설치후 webstrom…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/react-study-es-6&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Fastlane을 통한 FTP apk 자동 배포]]></title><link>https://coooldoggy.github.io/fastlane을-통한-ftp-apk-자동-배포</link><guid isPermaLink="false">https://coooldoggy.github.io/fastlane을-통한-ftp-apk-자동-배포</guid><pubDate>Wed, 27 Nov 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;앱이 수정될 떄 마다 APK FTP 서버에 올리는 것은 매우 귀찮다 ..
자동으로 배포하는 방법을 찾다가   Fastlane  을 발견했다. Fastlane은 Google play console…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/fastlane을-통한-ftp-apk-자동-배포&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Kotlin set]]></title><link>https://coooldoggy.github.io/kotlin-set</link><guid isPermaLink="false">https://coooldoggy.github.io/kotlin-set</guid><pubDate>Wed, 25 Sep 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;List를 만들고 List에 들어있는 순서대로 코드를 진행하고싶을때 Java에서는 다음 index를 사용하기 위해 for문을 돌리거나 while문을 돌린다.
koltin에서는 get/set 함수를 내부적으로 생성해주기 떄문에 따로 getter…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/kotlin-set&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Kotlin 초기화]]></title><link>https://coooldoggy.github.io/kotlin-초기화</link><guid isPermaLink="false">https://coooldoggy.github.io/kotlin-초기화</guid><pubDate>Tue, 13 Aug 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/kotlin-초기화&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Kotlin 표준함수]]></title><link>https://coooldoggy.github.io/kotlin-표준함수</link><guid isPermaLink="false">https://coooldoggy.github.io/kotlin-표준함수</guid><pubDate>Mon, 12 Aug 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/kotlin-표준함수&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Android PermissionUtil]]></title><link>https://coooldoggy.github.io/android-permission-util</link><guid isPermaLink="false">https://coooldoggy.github.io/android-permission-util</guid><pubDate>Wed, 07 Aug 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;어플리케이션을 만들때마다 권한에 대한 부분은 항상 헷갈린다 안드로이드에서 권한을 받는 순서는 대부분 아래와 같이 흘러간다. 권한이 필요한 행동을 한다 권한이 있는지 없는지 체크한다 2-1. 권한이 있으면 바로 동작 실행 2-…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/android-permission-util&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Andriod App에 Kakao 지도 API 추가하기]]></title><link>https://coooldoggy.github.io/andriod-app에-kakao-지도-api-추가하기</link><guid isPermaLink="false">https://coooldoggy.github.io/andriod-app에-kakao-지도-api-추가하기</guid><pubDate>Thu, 18 Jul 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Android 앱에 kakao API를 추가하려고 공식 가이드문서를 따라하다보면 절대 .. 제대로 동작하지 않는다.
문서를 업데이트를 안하는건지 API 자체를 관리안하는 건지 모르겠지만 쓸때마다 헷갈리므로 정리해보고자 한다. 먼저   카카오지도API…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/andriod-app에-kakao-지도-api-추가하기&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[현재 월의 시작일과 마지막일 구하기]]></title><link>https://coooldoggy.github.io/현재-월의-시작일과-마지막일-구하기</link><guid isPermaLink="false">https://coooldoggy.github.io/현재-월의-시작일과-마지막일-구하기</guid><pubDate>Tue, 11 Jun 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;날짜를 이용해 검색하는 화면에서 Default로 현재 월의 시작일과 마지막일을 넣어 검색하고자 할 때,
원하는 DateFormat에 맞춰 출력하는 법을 찾지 못해 헤매이다 여러방법을 시도한 끝에 성공하였다. 간단한 문제이지만 Calendar와 Date…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/현재-월의-시작일과-마지막일-구하기&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Android App 테스트- adb명령어를 이용한 테스트]]></title><link>https://coooldoggy.github.io/android-app-테스트-adb명령어를-이용한-테스트</link><guid isPermaLink="false">https://coooldoggy.github.io/android-app-테스트-adb명령어를-이용한-테스트</guid><pubDate>Mon, 03 Jun 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;안드로이드 테스트에는 다음과 같은 방법이 있다. 1.txt파일을 밀어넣어서 스크립트대로 동작하게하기
2.adb 명령어를 통한 랜덤테스트
3.Junit 테스트를 작성하여 실행 지난 포스트에 이어 adb명령어를 이용한 랜덤테스트에 관해 적어보겠다. adb…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/android-app-테스트-adb명령어를-이용한-테스트&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Android App 테스트- Junit test]]></title><link>https://coooldoggy.github.io/android-app-테스트-junit-test</link><guid isPermaLink="false">https://coooldoggy.github.io/android-app-테스트-junit-test</guid><pubDate>Mon, 03 Jun 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;안드로이드 테스트에는 다음과 같은 방법이 있다. 1.txt파일을 밀어넣어서 스크립트대로 동작하게하기
2.adb 명령어를 통한 랜덤테스트
3.Junit 테스트를 작성하여 실행 지난 포스트에 이어 JUnit…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/android-app-테스트-junit-test&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Android App 테스트- txt파일을 이용한 테스트]]></title><link>https://coooldoggy.github.io/android-app-테스트-txt파일을-이용한-테스트</link><guid isPermaLink="false">https://coooldoggy.github.io/android-app-테스트-txt파일을-이용한-테스트</guid><pubDate>Mon, 03 Jun 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/android-app-테스트-txt파일을-이용한-테스트&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Java Binarysort]]></title><link>https://coooldoggy.github.io/java-binarysort</link><guid isPermaLink="false">https://coooldoggy.github.io/java-binarysort</guid><pubDate>Wed, 03 Apr 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://coooldoggy.github.io/java-binarysort&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item></channel></rss>