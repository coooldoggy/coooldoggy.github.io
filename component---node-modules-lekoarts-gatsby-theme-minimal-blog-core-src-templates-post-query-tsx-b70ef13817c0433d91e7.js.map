{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-b70ef13817c0433d91e7.js","mappings":"gLA8BA,IAjBiBA,IAA0B,IAAzB,KAAEC,GAAiBD,EACnC,MAAM,SAAEE,EAAQ,SAAEC,IAAaC,EAAAA,EAAAA,KAE/B,OACEC,EAAAA,cAACA,EAAAA,SAAc,KACZJ,EAAKK,IAAI,CAACC,EAAKC,IACdH,EAAAA,cAACA,EAAAA,SAAc,CAACI,IAAKF,EAAIG,QACpBF,GAAC,KACJH,EAAAA,cAACM,EAAAA,GAAK,CAACC,GAAIC,EAAAA,KAAMC,IAAIC,EAAAA,EAAAA,GAAe,IAAIZ,EAAQ,IAAID,EAAQ,IAAIK,EAAIG,OACjEH,EAAIS,S,2KCYjB,MACMC,EADK,CAAC,OAAD,oBACOX,IAAKY,GAAC,2BAAgCA,EAAC,IAAIA,EAAC,QAqC9D,MAnCalB,IAAA,IAAGmB,MAAM,KAAEC,IAAmBpB,EAAA,OACzCqB,EAAAA,EAAAA,GAACC,EAAAA,EAAM,MACLD,EAAAA,EAAAA,GAACE,EAAAA,EAAG,CACFC,MAAOJ,EAAKI,MACZC,YAAaL,EAAKK,YAAcL,EAAKK,YAAcL,EAAKM,QACxDC,MAAOP,EAAKQ,OAASR,EAAKQ,OAAOC,gBAAgBC,OAAOC,SAAMC,EAC9DC,SAAUb,EAAKV,KACfwB,aAAcd,EAAKc,gBAErBb,EAAAA,EAAAA,GAACc,EAAAA,GAAO,CAACvB,GAAG,KAAKwB,QAAQ,aACtBhB,EAAKI,QAERH,EAAAA,EAAAA,GAAA,KAAGgB,GAAI,CAAEC,MAAM,YAAcC,GAAI,EAAGC,EAAG,CAAEF,MAAM,aAAgBG,SAAU,CAAC,EAAG,EAAG,MAC9EpB,EAAAA,EAAAA,GAAA,YAAOD,EAAKsB,MACXtB,EAAKnB,OACJoB,EAAAA,EAAAA,GAAChB,EAAAA,SAAc,YAEbgB,EAAAA,EAAAA,GAACsB,EAAAA,EAAQ,CAAC1C,KAAMmB,EAAKnB,QAGxBmB,EAAKwB,YAAU,MACfxB,EAAKwB,aAAcvB,EAAAA,EAAAA,GAAA,YAAOD,EAAKwB,WAAW,eAE7CvB,EAAAA,EAAAA,GAAA,WACEgB,GAAI,CACFQ,GAAI,EACJ,6BAA8B,CAAEA,GAAI,CAAC,EAAG,EAAG,GAAIC,UAAW7B,EAAO8B,KAAK,OACtEX,QAAQ,oBAGVf,EAAAA,EAAAA,GAAC2B,EAAAA,YAAW,KAAE5B,EAAK6B,SChEzB,MCQe,SAA4BjD,GAAuB,IAAjBkD,GAAKC,EAAAA,EAAAA,GAAA,KAAAC,EAAAA,EAAAA,GAAApD,GAAAA,IACpD,OAAOK,EAAAA,cAACgD,EAASH,EACnB,C","sources":["webpack://coooldoggy.dev/./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack://coooldoggy.dev/./src/@lekoarts/gatsby-theme-minimal-blog/components/post.tsx","webpack://coooldoggy.dev/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack://coooldoggy.dev/./src/@lekoarts/gatsby-theme-minimal-blog/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\n\ntype PostProps = {\n  data: {\n    post: {\n      slug: string\n      title: string\n      date: string\n      tags?: {\n        name: string\n        slug: string\n      }[]\n      description?: string\n      canonicalUrl?: string\n      body: string\n      excerpt: string\n      timeToRead?: number\n      banner?: {\n        childImageSharp: {\n          resize: {\n            src: string\n          }\n        }\n      }\n    }\n  }\n}\n\nconst px = [`32px`, `16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.15) 0px ${v} ${v} 0px`)\n\nconst Post = ({ data: { post } }: PostProps) => (\n  <Layout>\n    <Seo\n      title={post.title}\n      description={post.description ? post.description : post.excerpt}\n      image={post.banner ? post.banner.childImageSharp.resize.src : undefined}\n      pathname={post.slug}\n      canonicalUrl={post.canonicalUrl}\n    />\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": { my: [4, 4, 5], boxShadow: shadow.join(`, `) },\n        variant: `layout.content`,\n      }}\n    >\n      <MDXRenderer>{post.body}</MDXRenderer>\n    </section>\n  </Layout>\n)\n\nexport default Post\n","import { graphql } from \"gatsby\"\nimport PostComponent from \"../components/post\"\n\nexport default PostComponent\n\nexport const query = graphql`\n  query ($slug: String!, $formatString: String!) {\n    post(slug: { eq: $slug }) {\n      slug\n      title\n      date(formatString: $formatString)\n      tags {\n        name\n        slug\n      }\n      description\n      canonicalUrl\n      body\n      excerpt\n      timeToRead\n      banner {\n        childImageSharp {\n          resize(width: 1200, quality: 90) {\n            src\n          }\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Post from \"../../../components/post\"\n\ntype Props = {\n  data: {\n    post: any\n    [key: string]: any\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCorePost({ ...props }: Props) {\n  return <Post {...props} />\n}\n"],"names":["_ref","tags","tagsPath","basePath","useMinimalBlogConfig","React","map","tag","i","key","slug","TLink","as","Link","to","replaceSlashes","name","shadow","v","data","post","jsx","Layout","Seo","title","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","canonicalUrl","Heading","variant","sx","color","mt","a","fontSize","date","ItemTags","timeToRead","my","boxShadow","join","MDXRenderer","body","props","_extends","_objectDestructuringEmpty","Post"],"sourceRoot":""}