{
    "componentChunkName": "component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx",
    "path": "/node-js로-사용자-수-알림-slack-bot만들기",
    "result": {"data":{"post":{"slug":"/node-js로-사용자-수-알림-slack-bot만들기","title":"NodeJs로 사용자 수 알림 SlackBot만들기","date":"14.10.2020","tags":[{"name":"Nodejs","slug":"nodejs"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"NodeJs로 사용자 수 알림 SlackBot만들기\",\n  \"tags\": [\"Nodejs\"],\n  \"date\": \"2020-10-14T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"\\uCF54\\uB4DC\\uC791\\uC131\"), mdx(\"p\", null, \"\\uC544\\uCE68\\uB9C8\\uB2E4 MySqlWorkbench\\uB97C \\uC2E4\\uD589\\uD574\\uC11C \\uC0AC\\uC6A9\\uC790\\uC218\\uB97C \\uCFFC\\uB9AC\\uD558\\uAE30 \\uADC0\\uCC2E\\uC544\\uC11C NodeJs\\uB85C \\uC0AC\\uC6A9\\uC790 \\uC218\\uB97C \\uC2AC\\uB799 \\uBA54\\uC2DC\\uC9C0\\uB85C \\uBCF4\\uB0B4\\uC8FC\\uB294 Bot\\uC744 \\uB9CC\\uB4E4\\uAE30\\uB85C \\uD588\\uB2E4..\"), mdx(\"p\", null, \"NodeJS\\uB294 \\uC798\\uBAA8\\uB974\\uC9C0\\uB9CC \\uAE30\\uB2A5\\uC774 \\uAC04\\uB2E8\\uD558\\uB2C8\\uAE4C \\uD560 \\uC218\\uB294 \\uC788\\uC744 \\uAC83\\uC774\\uB77C\\uACE0 \\uC0DD\\uAC01\\uD558\\uACE0 \\uB3C4\\uC804!!\"), mdx(\"h3\", null, \"Slack Webhook\"), mdx(\"p\", null, \"\\uCF54\\uB4DC\\uB97C \\uC0AC\\uC6A9\\uD574\\uC11C Slack \\uBA54\\uC2DC\\uC9C0\\uB97C \\uBCF4\\uB0B4\\uB824\\uBA74 \\uC77C\\uB2E8 Slack WebHook\\uC744 \\uC124\\uC815\\uD574\\uC918\\uC57C\\uD55C\\uB2E4.\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://labs.brandi.co.kr/2019/01/30/kwakjs.html\"\n  }, \"\\uBE0C\\uB79C\\uB514 \\uB7A9\\uC2A4 \\uBE14\\uB85C\\uADF8\"), \" \\uC758 \\uAE00\\uC744 \\uBCF4\\uACE0 \\uC124\\uC815\\uD588\\uB2E4.\"), mdx(\"p\", null, \"\\uCF54\\uB4DC\\uC5D0 Slack \\uD50C\\uB7EC\\uADF8\\uC778\\uACFC WebHook URL\\uC744 \\uC120\\uC5B8\\uD558\\uACE0 Slack \\uAC1D\\uCCB4\\uB97C \\uB9CC\\uB4E4\\uC5B4 Webhook\\uC744 \\uC124\\uC815\\uD55C\\uB2E4. \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"\\nconst Slack = require(\\\"slack-node\\\");\\n\\nvar slackwebhook = \\\"https://hooks.slack.com/services/\\\";\\n\\nconst slack = new Slack();\\n\\nslack.setWebhook(slackwebhook);\\n\\n\")), mdx(\"p\", null, \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uBCF4\\uB0BC \\uD568\\uC218\\uB97C \\uB9CC\\uB4E4\\uC5B4\\uC900\\uB2E4.\\n\\uBA54\\uC2DC\\uC9C0\\uB97C \\uBCF4\\uB0B4\\uACE0 \\uBA54\\uC2DC\\uC9C0 \\uBCF4\\uB0B4\\uAE30\\uC5D0 \\uC2E4\\uD328\\uD558\\uBA74 mysql\\uACFC \\uC5F0\\uACB0\\uC744 \\uB04A\\uB294\\uB2E4. \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"const send = async (message) => {\\n    slack.webhook({\\n        username: '\\uC0AC\\uC6A9\\uC790\\uC218 \\uC54C\\uB9BC\\uC774',\\n        text: message,\\n        channel: '#service'\\n    }, function (err, response) {\\n        console.log(response);\\n        connection.end();\\n    });\\n}\\n\\n\")), mdx(\"h3\", null, \"SQL\"), mdx(\"p\", null, \"\\uD575\\uC2EC\\uC73C\\uB85C \\uC6D0\\uD558\\uB294 \\uAE30\\uB2A5\\uC774 SQL \\uCFFC\\uB9AC\\uB97C \\uC2E4\\uD589\\uD574\\uC11C \\uC0AC\\uC6A9\\uC790 \\uC218\\uB97C \\uC54C\\uB824\\uC8FC\\uB294 \\uAC83\\uC774\\uAE30 \\uB54C\\uBB38\\uC5D0 DB\\uC640 \\uC5F0\\uACB0\\uD558\\uC5EC \\uCFFC\\uB9AC\\uB97C \\uD558\\uB294 \\uAE30\\uB2A5\\uC774 \\uD544\\uC694\\uD558\\uB2E4. \"), mdx(\"p\", null, \"MySQL \\uD50C\\uB7EC\\uADF8\\uC778 \\uC120\\uC5B8 \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"\\nvar mysql = require(\\\"mysql\\\");\\n\\n\")), mdx(\"p\", null, \"MySQL\\uC5D0 \\uC5F0\\uACB0\\uD558\\uAE30 \\uC704\\uD574 \\uD544\\uC694\\uD55C \\uC815\\uBCF4\\uB4E4\\uB3C4 \\uC120\\uC5B8\\uD55C\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"var connection = mysql.createConnection({\\n    host: \\\"HOST URL\\\",\\n    user:\\\"USER ID\\\",\\n    password:\\\"PW\\\",\\n    database:\\\"DB NAME\\\"\\n});\\n\\n\")), mdx(\"h3\", null, \"CRON JOB\"), mdx(\"p\", null, \"\\uB9E4\\uC77C \\uC544\\uCE68 8\\uC2DC 30\\uBD84\\uC5D0 \\uC54C\\uB9BC\\uC744 \\uBC1B\\uACE0 \\uC2F6\\uC5B4\\uC11C Cron Job\\uC744 \\uC774\\uC6A9\\uD574\\uC11C \\uC791\\uC5C5\\uC8FC\\uAE30\\uB97C \\uC124\\uC815\\uD558\\uC600\\uB2E4.\\n\\uC6D4\\uD654\\uC218\\uBAA9\\uAE08 \\uC544\\uCE68 8\\uC2DC 30\\uBD84\\uC5D0 \\\"select count(*) from user\\\" \\uCFFC\\uB9AC\\uB97C \\uC218\\uD589 \\uD55C \\uB4A4 \\uBA54\\uC2DC\\uC9C0\\uB97C \\uBCF4\\uB0B8\\uB2E4. \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"const cron = require('node-cron');\\nconst schedule = require('node-schedule');\\n\\nschedule.scheduleJob('30 8 * * 1,2,3,4,5', function () {\\n    connection.connect(function (err) {\\n        if (err) {\\n            throw err;\\n        } else {\\n            connection.query(\\\"select count(*) from user\\\", function (err, rows, fields) {\\n                if (!err) {\\n                    console.log(rows[0]);\\n                    send(new Date() + \\\" \\uC0AC\\uC6A9\\uC790\\uC218 :\\\" + JSON.stringify(rows));\\n                } else {\\n                    console.log(err);\\n                }\\n\\n            });\\n        }\\n    });\\n    connection.end();\\n})\\n\\n\")), mdx(\"h3\", null, \"Full code\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"var mysql = require(\\\"mysql\\\");\\nconst Slack = require(\\\"slack-node\\\");\\nconst cron = require('node-cron');\\nconst schedule = require('node-schedule');\\nvar slackwebhook = \\\"https://hooks.slack.com/services/\\\";\\nconst slack = new Slack();\\nslack.setWebhook(slackwebhook);\\n\\n\\nvar connection = mysql.createConnection({\\n    host: \\\"HOST URL\\\",\\n    user:\\\"USER ID\\\",\\n    password:\\\"PW\\\",\\n    database:\\\"DB NAME\\\"\\n});\\n\\nconst send = async (message) => {\\n    slack.webhook({\\n        username: '\\uC0AC\\uC6A9\\uC790\\uC218 \\uC54C\\uB9BC\\uC774',\\n        text: message,\\n        channel: '#service'\\n    }, function (err, response) {\\n        console.log(response);\\n        connection.end();\\n    });\\n}\\n\\nschedule.scheduleJob('30 8 * * 1,2,3,4,5', function () {\\n    connection.connect(function (err) {\\n        if (err) {\\n            throw err;\\n        } else {\\n            connection.query(\\\"select count(*) from user\\\", function (err, rows, fields) {\\n                if (!err) {\\n                    console.log(rows[0]);\\n                    send(new Date() + \\\" \\uC0AC\\uC6A9\\uC790\\uC218 :\\\" + JSON.stringify(rows));\\n                } else {\\n                    console.log(err);\\n                }\\n\\n            });\\n        }\\n    });\\n    connection.end();\\n})\\n\\n\\n\")), mdx(\"h3\", null, \"Deploy\"), mdx(\"h4\", null, \"EC2\\uC5D0 git \\uC124\\uCE58\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sudo yum install git\\ngit init\\ngit config --global user.name \\\"your username\\\"\\ngit config --global user.email [your mail address]\\n\")), mdx(\"h4\", null, \"EC2\\uC5D0 nvm \\uC124\\uCE58\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash\\n\\n. ~/.nvm/nvm.sh\\n\")), mdx(\"h4\", null, \"EC2\\uC5D0 node \\uC124\\uCE58\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"nvm install node\\n\")), mdx(\"p\", null, \"Node \\uC124\\uCE58 \\uD6C4 Version \\uD655\\uC778\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"node -e \\\"console.log('Running Node.js ' + process.version)\\\"\\n\")), mdx(\"h4\", null, \"EC2\\uC5D0 Repository clone\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"git clone + [repository \\uC8FC\\uC18C]\\n\")), mdx(\"h4\", null, \"pm2\\uB85C \\uC2E4\\uD589\"), mdx(\"p\", null, \"pm2 \\uC124\\uCE58 \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sudo npm install -g pm2\\n\")), mdx(\"p\", null, \"node app\\uC2E4\\uD589\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"pm2 start app.js\\n\")), mdx(\"p\", null, \"app\\uC774 \\uC2E4\\uD589\\uC911\\uC778\\uC9C0 \\uD655\\uC778\\uD558\\uB824\\uBA74 \\uC544\\uB798 \\uBA85\\uB839\\uC5B4 \\uC0AC\\uC6A9 \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"pm2 status\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"코드작성 아침마다 MySqlWorkbench를 실행해서 사용자수를 쿼리하기 귀찮아서 NodeJs로 사용자 수를 슬랙 메시지로 보내주는 Bot을 만들기로 했다.. NodeJS…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/node-js로-사용자-수-알림-slack-bot만들기","formatString":"DD.MM.YYYY"}},
    "staticQueryHashes": ["2744905544","3090400250","318001574"]}