{
    "componentChunkName": "component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx",
    "path": "/android-permission-util",
    "result": {"data":{"post":{"slug":"/android-permission-util","title":"Android PermissionUtil","date":"07.08.2019","tags":[{"name":"Android","slug":"android"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Android PermissionUtil\",\n  \"tags\": [\"Android\"],\n  \"date\": \"2019-08-07T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\uC5B4\\uD50C\\uB9AC\\uCF00\\uC774\\uC158\\uC744 \\uB9CC\\uB4E4\\uB54C\\uB9C8\\uB2E4 \\uAD8C\\uD55C\\uC5D0 \\uB300\\uD55C \\uBD80\\uBD84\\uC740 \\uD56D\\uC0C1 \\uD5F7\\uAC08\\uB9B0\\uB2E4\"), mdx(\"a\", {\n    href: \"https://github.com/ParkSangGwon/TedPermission\"\n  }, \" Ted Permssion \"), \" \\uC774\\uB77C\\uB294 \\uC88B\\uC740 \\uB77C\\uC774\\uBE0C\\uB7EC\\uB9AC\\uB97C \\uC0AC\\uC6A9\\uD558\\uBA74 \\uAC04\\uB2E8\\uD788 \\uD574\\uACB0\\uD560 \\uC218\\uB3C4 \\uC788\\uC9C0\\uB9CC \\uACE0\\uC804\\uC801\\uC778 \\uBC29\\uBC95\\uC73C\\uB85C \\uAD8C\\uD55C\\uC744 \\uCCB4\\uD06C\\uD558\\uB294 \\uBC95\\uC5D0 \\uB300\\uD574 \\uC815\\uB9AC\\uD574\\uBCF4\\uACE0\\uC790 \\uD55C\\uB2E4.\", mdx(\"p\", null, \"\\uC548\\uB4DC\\uB85C\\uC774\\uB4DC\\uC5D0\\uC11C \\uAD8C\\uD55C\\uC744 \\uBC1B\\uB294 \\uC21C\\uC11C\\uB294 \\uB300\\uBD80\\uBD84 \\uC544\\uB798\\uC640 \\uAC19\\uC774 \\uD758\\uB7EC\\uAC04\\uB2E4.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uAD8C\\uD55C\\uC774 \\uD544\\uC694\\uD55C \\uD589\\uB3D9\\uC744 \\uD55C\\uB2E4\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uAD8C\\uD55C\\uC774 \\uC788\\uB294\\uC9C0 \\uC5C6\\uB294\\uC9C0 \\uCCB4\\uD06C\\uD55C\\uB2E4\")), mdx(\"p\", null, \"2-1. \\uAD8C\\uD55C\\uC774 \\uC788\\uC73C\\uBA74 \\uBC14\\uB85C \\uB3D9\\uC791 \\uC2E4\\uD589\"), mdx(\"p\", null, \"2-2. \\uAD8C\\uD55C\\uC774 \\uC5C6\\uB2E4\\uBA74 runtime \\uAD8C\\uD55C \\uD31D\\uC5C5\\uCC3D \\uD638\\uCD9C\"), mdx(\"p\", null, \"*\\uD5C8\\uC6A9\\uC2DC: \\uB3D9\\uC791 \\uC2E4\\uD589 \"), mdx(\"p\", null, \"*\\uAC70\\uBD80\\uC2DC: \\uC124\\uC815 \\uC73C\\uB85C \\uBCF4\\uB0B4\\uAC70\\uB098 \\uC571 \\uC885\\uB8CC\"), mdx(\"p\", null, \"\\uAD8C\\uD55C\\uC774 \\uC788\\uB294\\uC9C0 \\uC5C6\\uB294\\uC9C0 \\uCCB4\\uD06C\\uD558\\uB294 \\uAC83\\uC740 OS\\uBC84\\uC804\\uC744 \\uCCB4\\uD06C\\uD558\\uC5EC \\uC9C4\\uD589\\uD574\\uC57C\\uD558\\uB294\\uB370 \\uC774\\uB294 OS\\uBC84\\uC804\\uB9C8\\uB2E4 \\uB514\\uBC14\\uC774\\uC2A4 \\uC811\\uADFC \\uAD8C\\uD55C\\uC774 \\uAC15\\uD654\\uB418\\uAE30 \\uB54C\\uBB38\\uC774\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"public class PermissionUtils {\\n    private static String TAG = PermissionUtils.class.getSimpleName();\\n\\n    public static boolean permissionCheck(Context context, int permission) {\\n        boolean result = true;\\n\\n        try {\\n            switch (permission) {\\n                case Define.CHECK_ACCESS_FINE_LOCATION:\\n                    if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.M) {\\n                        int nAccessFinePermission = context.getApplicationContext().checkSelfPermission(Manifest.permission.ACCESS_FINE_LOCATION);\\n                        if (nAccessFinePermission == PackageManager.PERMISSION_GRANTED) {\\n                            result = true;\\n                        } else {\\n                            result = false;\\n                        }\\n                    } else {\\n                        LocationManager locationManager = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);\\n                        if (!locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {\\n                            result = false;\\n                        }\\n                        result = true;\\n                    }\\n                    break;\\n                case Define.CHECK_ACCESS_COARSE_LOCATION:\\n                    if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.M) {\\n                        int nAccessFinePermission = context.getApplicationContext().checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION);\\n                        if (nAccessFinePermission == PackageManager.PERMISSION_GRANTED) {\\n                            result = true;\\n                        } else {\\n                            result = false;\\n                        }\\n                    } else {\\n                        LocationManager locationManager = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);\\n                        if (!locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {\\n                            result = false;\\n                        }\\n                        result = true;\\n                    }\\n                    break;\\n                case Define.CHECK_ACCESS_CAMERA:\\n                    if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.M) {\\n                        int nAccessFinePermission = context.getApplicationContext().checkSelfPermission(Manifest.permission.CAMERA);\\n                        if (nAccessFinePermission == PackageManager.PERMISSION_GRANTED) {\\n                            result = true;\\n                        } else {\\n                            result = false;\\n                        }\\n                    }\\n                    break;\\n                case Define.CHECK_ACCESS_STORAGE:\\n                    if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.M) {\\n                        int nAccessFinePermission1 = context.getApplicationContext().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE);\\n                        int nAccessFinePermission2 = context.getApplicationContext().checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE);\\n                        if (nAccessFinePermission1 == PackageManager.PERMISSION_GRANTED && nAccessFinePermission2 == PackageManager.PERMISSION_GRANTED) {\\n                            result = true;\\n                        } else {\\n                            result = false;\\n                        }\\n                    }\\n                    break;\\n            }//end switch\\n\\n        } catch (Exception e) {\\n            e.printStackTrace();\\n        }\\n        return result;\\n    }\\n\\n}\\n\\n\")), mdx(\"p\", null, \"\\uC6B0\\uC120 PermissionUtil.class\\uB97C \\uB9CC\\uB4E0\\uB2E4. \\uC774 class\\uB294 \\uC0AC\\uC6A9\\uC790\\uAC00 \\uC774 \\uC571\\uC5D0 \\uB300\\uD55C \\uAD8C\\uD55C\\uC744 \\uD5C8\\uC6A9\\uD588\\uB294\\uC9C0 \\uAC70\\uBD80\\uD588\\uB294\\uC9C0\\uC5D0 \\uB300\\uD574 \\uCCB4\\uD06C\\uD55C\\uB2E4.\\n\\uADF8\\uB9AC\\uACE0 \\uAD8C\\uD55C\\uC744 \\uC694\\uCCAD\\uD560 \\uC561\\uD2F0\\uBE44\\uD2F0 \\uB0B4\\uC5D0\\uC11C \\uAD8C\\uD55C\\uC774 \\uD5C8\\uC6A9\\uC5EC\\uBD80\\uB97C \\uBB3B\\uB294 \\uBA54\\uC18C\\uB4DC\\uB97C \\uB9CC\\uB4E0\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"  private void checkPermission(int requesttype) {\\n        switch (requesttype) {\\n            case Define.CHECK_ACCESS_FINE_LOCATION:\\n                if (PermissionUtils.permissionCheck(this.getApplicationContext(), Define.CHECK_ACCESS_FINE_LOCATION) == false) {\\n                    requestPermission(Define.REQUEST_ACCESS_FINE_LOCATION);\\n                } else {\\n                }\\n                break;\\n            case Define.CHECK_ACCESS_CAMERA:\\n                break;\\n        }\\n    }\\n\")), mdx(\"p\", null, \"\\uC5EC\\uAE30\\uC11C else \\uAD6C\\uBB38\\uC774 \\uC774\\uBBF8 \\uAD8C\\uD55C\\uC774 \\uC874\\uC7AC\\uD558\\uB294 \\uAC83\\uC774\\uBBC0\\uB85C if\\uAD6C\\uBB38\\uC5D0 \\uB7F0\\uD0C0\\uC784\\uAD8C\\uD55C\\uC744 \\uC694\\uCCAD\\uD558\\uB294 \\uD568\\uC218\\uB97C \\uD638\\uCD9C\\uD55C\\uB2E4.\\n\\uB7F0\\uD0C0\\uC784 \\uAD8C\\uD55C\\uC744 \\uD638\\uCD9C\\uD558\\uB294 \\uD568\\uC218\\uB294 \\uB2E4\\uC74C\\uACFC \\uAC19\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \" private void requestPermission(int requesttype) {\\n        switch (requesttype) {\\n            case Define.REQUEST_ACCESS_FINE_LOCATION:\\n                ActivityCompat.requestPermissions(this, new String[]{android.Manifest.permission.ACCESS_FINE_LOCATION}, requesttype);\\n                break;\\n            case Define.REQUEST_ACCESS_CAMERA:\\n                ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.CAMERA}, requesttype);\\n                break;\\n        }\\n    }\\n\")), mdx(\"p\", null, \"\\uC774\\uB54C android.Manifest.permission. \\uB2E4\\uC74C\\uC758 \\uC2A4\\uD2B8\\uB9C1\\uC774 \\uAD8C\\uD55C\\uC744 \\uC758\\uBBF8\\uD558\\uB294 \\uAC83\\uC774\\uBBC0\\uB85C \\uAC01\\uAC01\\uC758 \\uAD8C\\uD55C\\uC5D0 \\uB9DE\\uAC8C \\uBCC0\\uACBD\\uD558\\uBA74 \\uB41C\\uB2E4.\"), mdx(\"p\", null, \"\\uB9C8\\uC9C0\\uB9C9\\uC73C\\uB85C \\uAD8C\\uD55C\\uC774 \\uC2B9\\uC778\\uB418\\uAC70\\uB098 \\uAC70\\uBD80\\uB418\\uC5C8\\uC744\\uB54C OS\\uC5D0\\uC11C resultCode\\uC640 \\uACB0\\uACFC\\uAC12\\uC744 \\uBC18\\uD658\\uD574\\uC8FC\\uB294\\uB370 \\uC774 \\uAC12\\uC744 \\uBC1B\\uAE30 \\uC704\\uD574\\uC11C method\\uB97C Override \\uD574\\uC900\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"\\n @Override\\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\\n        switch (requestCode) {\\n            case Define.REQUEST_ACCESS_FINE_LOCATION:\\n                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\\n                } else {\\n                    requestLocationAgain();\\n                }\\n                return;\\n            case Define.CHECK_ACCESS_CAMERA:\\n                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\\n                    // \\uAD8C\\uD55C \\uD5C8\\uAC00\\n                } else {\\n                    // \\uAD8C\\uD55C \\uAC70\\uBD80\\n                }\\n                break;\\n        }\\n    }\\n    \\n     private void requestLocationAgain(){\\n                Intent intent = new Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS, Uri.parse(\\\"package:\\\" + getPackageName()));\\n                intent.addCategory(Intent.CATEGORY_DEFAULT);\\n                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\\n                startActivity(intent);\\n            }\\n    \\n\")), mdx(\"p\", null, \"\\uC5EC\\uAE30\\uC11C \\uB9CC\\uC57D \\uAC70\\uBD80\\uB2F9\\uD588\\uC744\\uB54C \\uC124\\uC815\\uD654\\uBA74\\uC73C\\uB85C \\uC774\\uB3D9\\uD558\\uAC8C \\uD558\\uACE0 \\uC2F6\\uB2E4\\uBA74 requestLocationAgain() \\uD568\\uC218 \\uC548\\uC758 intent\\uB97C \\uC2E4\\uD589\\uD574\\uC8FC\\uBA74 \\uB41C\\uB2E4.\"), mdx(\"p\", null, \"Define. \\uC5B4\\uCA4C\\uAD6C\\uB77C\\uACE0 \\uC790\\uAFB8\\uB098\\uC624\\uB294\\uB370 \\uC8FC\\uB85C Define\\uC5D0 constant\\uB4E4\\uC744 \\uBAB0\\uC544\\uB123\\uACE0 \\uACF5\\uD1B5\\uC73C\\uB85C \\uC0AC\\uC6A9\\uD558\\uACE0 \\uC788\\uB2E4.\\n\\uC5EC\\uAE30\\uC11C \\uC4F0\\uC600\\uB358 \\uAC83\\uB4E4\\uC740 \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"    public static final int CHECK_ACCESS_FINE_LOCATION = 0;\\n    public static final int CHECK_ACCESS_COARSE_LOCATION = 1;\\n    public static final int CHECK_ACCESS_CAMERA = 2;\\n    public static final int CHECK_ACCESS_STORAGE = 3;\\n\")), mdx(\"p\", null, \" \\uC774\\uB807\\uAC8C \\uADF8\\uB0E5 int \\uAC12\\uC744 \\uC900\\uAC83\\uC774\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uD074\\uB798\\uC2A4\\uC758 \\uBA64\\uBC84\\uB85C \\uC120\\uC5B8\\uD574\\uB3C4 \\uC0C1\\uAD00\\uC5C6\\uB2E4.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"어플리케이션을 만들때마다 권한에 대한 부분은 항상 헷갈린다 안드로이드에서 권한을 받는 순서는 대부분 아래와 같이 흘러간다. 권한이 필요한 행동을 한다 권한이 있는지 없는지 체크한다 2-1. 권한이 있으면 바로 동작 실행 2-…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/android-permission-util","formatString":"DD.MM.YYYY"}},
    "staticQueryHashes": ["2744905544","3090400250","318001574"]}