{
    "componentChunkName": "component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx",
    "path": "/ocr-api-비교",
    "result": {"data":{"post":{"slug":"/ocr-api-비교","title":"OCR API 비교","date":"12.02.2020","tags":[{"name":"Android","slug":"android"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"OCR API 비교\",\n  \"tags\": [\"Android\"],\n  \"date\": \"2020-02-12T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"OCR(Optical character recognition)\\uC740 \\uC0AC\\uB78C\\uC774 \\uC4F0\\uAC70\\uB098 \\uAE30\\uACC4\\uB85C \\uC778\\uC1C4\\uD55C \\uBB38\\uC790\\uC758 \\uC601\\uC0C1\\uC744 \\uAE30\\uACC4\\uAC00 \\uC77D\\uC744 \\uC218 \\uC788\\uB294 \\uBB38\\uC790\\uB85C \\uBCC0\\uD658\\uD558\\uB294\\uAC83\\uC774\\uB2E4.\"), mdx(\"p\", null, \"\\uCD5C\\uADFC ML\\uC774 \\uD2B8\\uB80C\\uB4DC\\uB85C \\uB5A0\\uC624\\uB974\\uBA74\\uC11C \\uB2E4\\uC591\\uD55C \\uAE30\\uC5C5\\uB4E4\\uC5D0\\uC11C \\uC774\\uB97C \\uAE30\\uBC18\\uC73C\\uB85C \\uD55C OCR API\\uB97C \\uC81C\\uACF5\\uD558\\uACE0 \\uC788\\uB294\\uB370 \\uBA87\\uAC1C\\uB97C \\uC0AC\\uC6A9\\uD574\\uBCF4\\uACE0 \\uC815\\uB9AC\\uD574\\uBCF4\\uACE0\\uC790 \\uD55C\\uB2E4.\"), mdx(\"h1\", null, \"Firebase ML Kit\"), mdx(\"p\", null, \"Google\\uC5D0\\uC11C \\uC81C\\uACF5\\uD558\\uB294 \\uBAA8\\uBC14\\uC77C\\uC6A9 ML kit\\uC774\\uB2E4. \\uBB34\\uB8CC\\uC774\\uC9C0\\uB9CC \\uB77C\\uD2F4 \\uBB38\\uC790\\uB9CC \\uC778\\uC2DD\\uC774 \\uAC00\\uB2A5\\uD558\\uB2E4.\"), mdx(\"p\", null, \"\\uC778\\uC2DD\\uC18D\\uB3C4\\uAC00 \\uBE60\\uB974\\uACE0 \\uC774\\uBBF8\\uC9C0\\uB9CC \\uC804\\uC1A1\\uD558\\uBA74 \\uD14D\\uC2A4\\uD2B8\\uB97C \\uBF51\\uC544\\uC8FC\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uC0AC\\uC6A9\\uB3C4 \\uD3B8\\uB9AC\\uD558\\uB2E4.\"), mdx(\"h3\", null, \"\\uC0AC\\uC6A9\\uBC95\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Firebase \\uD504\\uB85C\\uC81D\\uD2B8\\uB97C \\uC0DD\\uC131\\uD55C\\uB2E4. \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://console.firebase.google.com/u/0/?hl=ko\"\n  }, \"Firebase \\uCF58\\uC194\"), \" \\uC5D0 \\uB85C\\uADF8\\uC778\\uD558\\uC5EC \\uD504\\uB85C\\uC81D\\uD2B8 \\uCD94\\uAC00 \\uBC84\\uD2BC\\uC744 \\uB204\\uB974\\uACE0, \\uAC00\\uC774\\uB4DC\\uB300\\uB85C \\uB530\\uB77C\\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uD504\\uB85C\\uC81D\\uD2B8\\uC758 \\uC67C\\uCABD\\uC0AC\\uC774\\uB4DC\\uBC14\\uC5D0\\uC11C \\uAC1C\\uBC1C> ML kit\\uB97C \\uD074\\uB9AD\\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uD14D\\uC2A4\\uD2B8 \\uC778\\uC2DD\\uC744 \\uB20C\\uB7EC \\uC2DC\\uC791\\uD55C\\uB2E4.\")), mdx(\"h3\", null, \"\\uC608\\uC81C \\uCF54\\uB4DC\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-kotlin\"\n  }, \" private fun googleAnalyze(path: String){\\n        val image: FirebaseVisionImage\\n        try {\\n            image = FirebaseVisionImage.fromFilePath(this, Uri.fromFile(File(path)))\\n            val detector = FirebaseVision.getInstance().onDeviceTextRecognizer\\n            val result = detector.processImage(image)\\n                .addOnSuccessListener {\\n                    Log.d(TAG, it.text)\\n                }.addOnFailureListener {\\n                    Log.d(TAG, it.message)\\n                }\\n        }catch (e: IOException){\\n            e.printStackTrace()\\n        }\\n    }\\n\\n\")), mdx(\"h1\", null, \"KaKao Vision API\"), mdx(\"p\", null, \"\\uCE74\\uCE74\\uC624\\uC5D0\\uC11C \\uC81C\\uACF5\\uD558\\uB294 Rest API\\uC5D0 \\uC18D\\uD574\\uC788\\uB2E4.\"), mdx(\"p\", null, \"\\uC774\\uBBF8\\uC9C0\\uC5D0\\uC11C \\uBB38\\uC790\\uC601\\uC5ED\\uC744 \\uAC10\\uC9C0\\uD558\\uC5EC \\uBB38\\uC790\\uC601\\uC5ED\\uC758 \\uC88C\\uD45C\\uAC12\\uACFC \\uC774\\uBBF8\\uC9C0\\uB97C \\uB358\\uC9C0\\uBA74 \\uD14D\\uC2A4\\uD2B8\\uAC00 \\uCD9C\\uB825\\uB41C\\uB2E4.\"), mdx(\"p\", null, \"\\uC774\\uBBF8\\uC9C0\\uC5D0\\uC11C \\uBB38\\uC790\\uC601\\uC5ED\\uC744 \\uCD94\\uCD9C\\uD558\\uB294 API\\uC640 \\uD14D\\uC2A4\\uD2B8\\uB97C \\uC778\\uC2DD\\uD558\\uB294 API\\uAC00 \\uB530\\uB85C\\uB530\\uB85C \\uC788\\uAE30\\uB54C\\uBB38\\uC5D0 API\\uB97C \\uB450\\uBC88 \\uCF5C\\uD574\\uC57C \\uBB38\\uC790 \\uAC12\\uC744 \\uC5BB\\uC744 \\uC218 \\uC788\\uB2E4.\"), mdx(\"h3\", null, \"\\uC0AC\\uC6A9\\uBC95\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developers.kakao.com/\"\n  }, \"\\uCE74\\uCE74\\uC624 \\uAC1C\\uBC1C\\uC790 \\uD398\\uC774\\uC9C0\"), \" \\uC5D0 \\uC811\\uC18D\\uD558\\uC5EC \\uB85C\\uADF8\\uC778\\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uC0C8\\uB85C\\uC6B4 \\uC571\\uC744 \\uB9CC\\uB4E0\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Rest API \\uD0A4 \\uAC12\\uC744 \\uC5BB\\uC5B4 API\\uB97C \\uD638\\uCD9C\\uD55C\\uB2E4.\")), mdx(\"h3\", null, \"\\uC608\\uC81C\\uCF54\\uB4DC\"), mdx(\"p\", null, \"\\uBA3C\\uC800 \\uC774\\uBBF8\\uC9C0 \\uD30C\\uC77C\\uC744 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://kapi.kakao.com/v1/vision/text/detect\"\n  }, \"https://kapi.kakao.com/v1/vision/text/detect\"), \" \\uC5D0 POST \\uBC29\\uC2DD\\uC73C\\uB85C \\uB118\\uACA8 \\uD14D\\uC2A4\\uD2B8 \\uC601\\uC5ED\\uC758 \\uC88C\\uD45C\\uAC12\\uC744 \\uC5BB\\uB294\\uB2E4.\"), mdx(\"h5\", null, \"APIManager.kt\"), mdx(\"p\", null, \"\\uCE74\\uCE74\\uC624 \\uBE44\\uC804 API \\uD638\\uCD9C \\uC2DC \\uC774\\uBBF8\\uC9C0 \\uC0AC\\uC774\\uC988\\uB294 4096x4096\\uC774\\uD558\\uC5EC\\uC57C \\uD558\\uACE0 \\uCD5C\\uB300 \\uC6A9\\uB7C9\\uC740 2MB\\uC774\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uD30C\\uC77C\\uC744 POST\\uB85C \\uB118\\uAE30\\uAE30 \\uC804\\uC5D0 \\uC6A9\\uB7C9\\uC744 \\uC904\\uC5EC\\uC8FC\\uC5C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-kotlin\"\n  }, \"object ApiManager {\\n    private val TAG = ApiManager::class.java.simpleName\\n\\n    fun getKakaoBoxes(fileUri: String): Observable<DataModel.boxResult> {\\n        val kakaoBoxService = KakaoVisionApiService.createKakaoOCR()\\n        scaleDown(fileUri)\\n        val file = File(fileUri)\\n        val requestBody = RequestBody.create(MediaType.parse(\\\"multipart/form-data\\\"), file)\\n\\n        return kakaoBoxService.getKakaoBoxresult(KAKAO_KEY, requestBody)\\n    }\\n\\n    fun scaleDown(path: String) {\\n        var photo = BitmapFactory.decodeFile(path)\\n        photo = Bitmap.createScaledBitmap(photo, 1000, 1000, false)\\n        var bytes = ByteArrayOutputStream()\\n        photo.compress(Bitmap.CompressFormat.JPEG, 80, bytes)\\n\\n        var file = File(path)\\n        file.createNewFile()\\n        var output = FileOutputStream(file)\\n        output.write(bytes.toByteArray())\\n        output.close()\\n\\n    }\\n}\\n\")), mdx(\"h5\", null, \"DataModel.kt\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-kotlin\"\n  }, \"object DataModel {\\n    data class boxResult(@SerializedName(\\\"result\\\") val result : boxes)\\n    data class boxes( @SerializedName(\\\"boxes\\\") val boxes : JsonArray)\\n}\\n\")), mdx(\"p\", null, \"API\\uC758 \\uC751\\uB2F5 \\uD615\\uD0DC\\uAC00 \\uC544\\uB798\\uC640 \\uAC19\\uC73C\\uBBC0\\uB85C data class\\uB97C \\uB9CC\\uB4E4\\uC5B4 \\uC900\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\\"result\\\":{\\\"boxes\\\":[[[345,554],[417,554],[417,638],[345,638]]]}}\\n\")), mdx(\"h5\", null, \"KaKaoVisionApiService.kt\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-kotlin\"\n  }, \"interface KakaoVisionApiService {\\n\\n    @POST(KAKAO_BOX_SUB_URL)\\n    @Multipart\\n    fun getKakaoBoxresult(@Header(\\\"Authorization\\\") key: String, @Part(\\\"file\\\\\\\"; filename=\\\\\\\"photo.jpg\\\\\\\"\\\") file: RequestBody) : Observable<DataModel.boxResult>\\n\\n    companion object{\\n\\n        fun createKakaoOCR(): KakaoVisionApiService{\\n            return getKakaoOCRApiService().create(KakaoVisionApiService::class.java)\\n        }\\n\\n        private fun getKakaoOCRApiService() : Retrofit {\\n            return Retrofit.Builder()\\n                .client(provideOkHttpClient(provideLoggingInterceptor()))\\n                .addCallAdapterFactory(RxJava2CallAdapterFactory.create())\\n                .addConverterFactory(GsonConverterFactory.create())\\n                .baseUrl(KAKAO_BASE_URL)\\n                .build()\\n        }\\n\\n\\n        private fun provideOkHttpClient(interceptor: HttpLoggingInterceptor): OkHttpClient {\\n            val b = OkHttpClient.Builder()\\n            b.addInterceptor(interceptor)\\n            return b.build()\\n        }\\n\\n\\n        private fun provideLoggingInterceptor(): HttpLoggingInterceptor {\\n            val interceptor = HttpLoggingInterceptor(HttpLoggingInterceptor.Logger {\\n                Log.d(\\\"DEBUG-API-LOG\\\", it)\\n            })\\n            interceptor.level = HttpLoggingInterceptor.Level.BODY\\n\\n            return interceptor\\n        }\\n\\n    }\\n}\\n\")), mdx(\"p\", null, \"Retrofit \\uAC1D\\uCCB4\\uB97C \\uC0DD\\uC131\\uD558\\uB294 \\uC778\\uD130\\uD398\\uC774\\uC2A4\\uB97C \\uB9CC\\uB4E4\\uC5B4\\uC900\\uB2E4.\"), mdx(\"p\", null, \"Multipart\\uB85C \\uD30C\\uC77C\\uC744 \\uB118\\uAE30\\uB294 \\uBD80\\uBD84\\uC5D0\\uC11C \\uC0BD\\uC9C8\\uC744 \\uB9CE\\uC774\\uD588\\uB294\\uB370, \\uAC80\\uC0C9\\uD558\\uBA74 \\uC8C4\\uB2E4 MultipartBody.Part\\uB85C \\uB118\\uAE30\\uB77C\\uACE0 \\uB098\\uC628\\uB2E4. \\uADF8\\uB7F0\\uB370 \\uADF8\\uB807\\uAC8C \\uB118\\uAE30\\uBA74 illegal type \\uC774\\uB77C\\uACE0 \\uC624\\uB958\\uAC00 \\uB9AC\\uD134\\uB41C\\uB2E4. RequestBody\\uB85C \\uB118\\uACA8\\uC8FC\\uACE0 Part\\uC5D0\\uB294 \\uC694\\uCCAD \\uD30C\\uB77C\\uBBF8\\uD130 \\uC774\\uB984\\uC778 file\\uC744 \\uC124\\uC815\\uD574\\uC900\\uB2E4.\"), mdx(\"h5\", null, \"MainActivity.kt\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-kotlin\"\n  }, \"private fun kakaoAnalyzeBox(path: String){\\n        ApiManager.getKakaoBoxes(path).subscribeOn(Schedulers.io())\\n            .observeOn(AndroidSchedulers.mainThread())\\n            .doOnNext {\\n                Log.d(TAG, \\\"type= ${it.result.boxes}\\\")\\n                kakaoAnalyzeOcr(path, \\\"${it.result.boxes}\\\")\\n            }\\n            .subscribe({\\n                Log.d(TAG, \\\"subscribe\\\" + it.result)\\n            }, {t: Throwable? ->\\n                Log.e(TAG, \\\"kakaoAnalyzeBox\\\"+t?.message.toString())\\n            })\\n    }\\n\")), mdx(\"p\", null, \"\\uBA54\\uC778\\uC561\\uD2F0\\uBE44\\uD2F0\\uC5D0\\uC11C \\uCE74\\uBA54\\uB77C\\uB85C \\uC0AC\\uC9C4\\uC744 \\uCC0D\\uC740 \\uD6C4 Path\\uB97C \\uB123\\uC5B4 \\uCF5C\\uD574\\uC900\\uB2E4. \\uADF8\\uB9AC\\uACE0 \\uC774\\uD6C4\\uC5D0 \\uD14D\\uC2A4\\uD2B8 \\uC778\\uC2DD API\\uB97C \\uCF5C\\uD55C\\uB2E4.\"), mdx(\"h5\", null, \"MainActivity.kt\"), mdx(\"p\", null, \"kakaoAnalyzeBox \\uD568\\uC218\\uC5D0\\uC11C \\uD638\\uCD9C\\uD558\\uB294 OCR\\uD568\\uC218\\uB294 \\uB2E4\\uC74C\\uACFC \\uAC19\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-kotlin\"\n  }, \" private fun kakaoAnalyzeOcr(path: String, box: String){\\n        ApiManager.getKakaoOCR(path, box).subscribeOn(Schedulers.io())\\n            .observeOn(AndroidSchedulers. mainThread())\\n            .subscribe ({\\n                tv_result.text = it.result.get(\\\"recognition_words\\\").asString\\n            },{t: Throwable? ->\\n                Log.e(TAG, \\\"kakaoAnalyzeOcr\\\"+t?.message.toString())\\n                tv_result.text = \\\"\\uC0AC\\uC9C4\\uC774 \\uC778\\uC2DD\\uB418\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4. \\uB2E4\\uC2DC \\uCD2C\\uC601\\uD574\\uC8FC\\uC138\\uC694.\\\"\\n            })\\n    }\\n\")), mdx(\"p\", null, \"\\uB9C8\\uCC2C\\uAC00\\uC9C0\\uB85C ApiManager\\uC640 KakaoVisionApiService\\uC5D0 \\uD568\\uC218\\uB97C \\uB9CC\\uB4E4\\uACE0 DataModel\\uC5D0\\uB3C4 \\uC751\\uB2F5 JSON \\uD615\\uC2DD\\uC758 \\uAC1D\\uCCB4\\uB97C \\uB9CC\\uB4E4\\uC5B4 \\uC900\\uB2E4.\"), mdx(\"h5\", null, \"DataModel.kt\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-kotlin\"\n  }, \"  data class ocrResult(var result: JsonObject, var recognition_words: JsonArray)\\n\")), mdx(\"h5\", null, \"ApiManager.kt\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-kotlin\"\n  }, \"fun getKakaoOCR(fileUri: String, box: String): Observable<DataModel.ocrResult> {\\n        val kakaoOcrService = KakaoVisionApiService.createKakaoOCR()\\n        val file = File(fileUri)\\n        val requestBody = RequestBody.create(MediaType.parse(\\\"multipart/form-data\\\"), file)\\n        return kakaoOcrService.getKakaoOCRresult(KAKAO_KEY, requestBody, box)\\n    }\\n\")), mdx(\"h5\", null, \"KakoVisionApiService.kt\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-kotlin\"\n  }, \" @POST(KAKAO_OCR_SUB_URL)\\n    @Multipart\\n    fun getKakaoOCRresult(@Header(\\\"Authorization\\\") key: String,@Part(\\\"file\\\\\\\"; filename=\\\\\\\"photo.jpg\\\\\\\"\\\") file: RequestBody, @Query(\\\"boxes\\\")box: String) : Observable<DataModel.ocrResult>\\n\")), mdx(\"p\", null, \"\\uC774\\uB807\\uAC8C \\uD574\\uC11C \\uC2E4\\uD589\\uD558\\uBA74 kakao OCR API\\uB97C \\uC0AC\\uC6A9\\uD558\\uC5EC \\uD14D\\uC2A4\\uD2B8\\uB97C \\uCD94\\uCD9C\\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"h1\", null, \"Google Cloud Vision\"), mdx(\"p\", null, \"Firebase ML kit\\uC640 \\uAC19\\uC774 \\uAD6C\\uAE00\\uC5D0\\uC11C \\uC81C\\uACF5\\uD558\\uB294 \\uC11C\\uBE44\\uC2A4\\uC774\\uC9C0\\uB9CC, ML kit\\uC640 \\uB2E4\\uB974\\uAC8C Cloud Vision\\uC740 \\uB77C\\uD2F4\\uC5B4 \\uBFD0\\uB9CC\\uC544\\uB2C8\\uB77C \\uD55C\\uAD6D\\uC5B4\\uB97C \\uD3EC\\uD568\\uD55C \\uB2E4\\uC591\\uD55C \\uC5B8\\uC5B4\\uB97C \\uC81C\\uACF5\\uD55C\\uB2E4. (\\uBB3C\\uB860 FIrebase\\uC5D0\\uC11C Blazer \\uC694\\uAE08\\uC81C\\uB97C \\uC0AC\\uC6A9\\uD574\\uC57C\\uD55C\\uB2E4.) \\uD558\\uC9C0\\uB9CC 1000\\uD68C\\uAE4C\\uC9C0\\uB294 \\uBB34\\uB8CC\\uC774\\uACE0, Blazer\\uC694\\uAE08\\uC81C\\uB97C \\uC0AC\\uC6A9\\uD558\\uB354\\uB77C\\uB3C4 \\uBB34\\uB8CC \\uC0AC\\uC6A9\\uB7C9 \\uC548\\uC5D0\\uC11C\\uB294 \\uACFC\\uAE08\\uC774 \\uB418\\uC9C0 \\uC54A\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uC0AC\\uC6A9\\uB7C9\\uC774 \\uC801\\uB2E4\\uBA74 \\uC0AC\\uC6A9\\uD574\\uBCFC \\uB9CC \\uD558\\uB2E4.\"), mdx(\"p\", null, \"\\uC0AC\\uC6A9\\uBC29\\uBC95\\uC740 Firebase ML Kit\\uC640 \\uAC70\\uC758 \\uC720\\uC0AC\\uD558\\uB2E4. \\uD55C\\uAC00\\uC9C0 \\uB2E4\\uB978 \\uC810\\uC740 Option\\uC744 \\uC124\\uC815\\uD574\\uC11C \\uAC10\\uC9C0 \\uC5B8\\uC5B4\\uB97C \\uC124\\uC815\\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-kotlin\"\n  }, \" private fun gcpAnalyze(path: String){\\n        val image: FirebaseVisionImage = FirebaseVisionImage.fromFilePath(this, Uri.fromFile(File(path)))\\n        val options = FirebaseVisionCloudTextRecognizerOptions.Builder().setLanguageHints(listOf(\\\"ko\\\")).build()\\n        val dectector = FirebaseVision.getInstance().getCloudTextRecognizer(options)\\n        val result = dectector.processImage(image).addOnSuccessListener {\\n            Log.d(TAG, it.text)\\n        }.addOnFailureListener { e->\\n            Log.d(TAG, e.message)\\n        }\\n    }\\n\")), mdx(\"p\", null, \"Full Code\\uB294 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/coooldoggy/OCRApiTest\"\n  }, \"\\uC5EC\\uAE30\"), \" \\uC5D0\\uC11C \\uD655\\uC778\\uD560 \\uC218 \\uC788\\uB2E4.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"OCR(Optical character recognition)은 사람이 쓰거나 기계로 인쇄한 문자의 영상을 기계가 읽을 수 있는 문자로 변환하는것이다. 최근 ML이 트렌드로 떠오르면서 다양한 기업들에서 이를 기반으로 한 OCR API…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/ocr-api-비교","formatString":"DD.MM.YYYY"}},
    "staticQueryHashes": ["2744905544","3090400250","318001574"]}