{
    "componentChunkName": "component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx",
    "path": "/kotlin-set",
    "result": {"data":{"post":{"slug":"/kotlin-set","title":"Kotlin set","date":"25.09.2019","tags":[{"name":"Kotlin","slug":"kotlin"},{"name":"TIL","slug":"til"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Kotlin set\",\n  \"tags\": [\"Kotlin\", \"TIL\"],\n  \"date\": \"2019-09-25T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"List\\uB97C \\uB9CC\\uB4E4\\uACE0 List\\uC5D0 \\uB4E4\\uC5B4\\uC788\\uB294 \\uC21C\\uC11C\\uB300\\uB85C \\uCF54\\uB4DC\\uB97C \\uC9C4\\uD589\\uD558\\uACE0\\uC2F6\\uC744\\uB54C Java\\uC5D0\\uC11C\\uB294 \\uB2E4\\uC74C index\\uB97C \\uC0AC\\uC6A9\\uD558\\uAE30 \\uC704\\uD574 for\\uBB38\\uC744 \\uB3CC\\uB9AC\\uAC70\\uB098 while\\uBB38\\uC744 \\uB3CC\\uB9B0\\uB2E4.\\nkoltin\\uC5D0\\uC11C\\uB294 get/set \\uD568\\uC218\\uB97C \\uB0B4\\uBD80\\uC801\\uC73C\\uB85C \\uC0DD\\uC131\\uD574\\uC8FC\\uAE30 \\uB584\\uBB38\\uC5D0 \\uB530\\uB85C getter/setter\\uB97C \\uB9CC\\uB4E4 \\uD544\\uC694\\uAC00 \\uC5C6\\uB2E4.\\nproperty\\uB97C \\uC120\\uC5B8\\uD558\\uB294 \\uAE30\\uBCF8\\uBB38\\uBC95\\uC740 \\uB2E4\\uC74C\\uACFC \\uAC19\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-kotlin\"\n  }, \"var <propertyName>[: <PropertyType>] [= <property_initializer>]\\n    [<getter>]\\n    [<setter>]\\n\")), mdx(\"p\", null, \"\\uD558\\uC9C0\\uB9CC \\uC544\\uAE4C \\uC5B8\\uAE09\\uD588\\uB4EF\\uC774 get/set\\uC740 \\uAE30\\uBCF8\\uC801\\uC73C\\uB85C \\uC0DD\\uC131\\uB418\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uB9CC\\uB4E4\\uC9C0 \\uC54A\\uC544\\uB3C4 \\uB41C\\uB2E4.\\n\\uD558\\uC9C0\\uB9CC \\uCEE4\\uC2A4\\uD140 \\uC811\\uADFC\\uC790\\uB97C \\uC0DD\\uC131\\uD558\\uC5EC \\uB2E4\\uB978 \\uB3D9\\uC791\\uC744 \\uD558\\uAC8C \\uD560 \\uC218 \\uC788\\uB2E4. \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-kotlin\"\n  }, \"var stringRepresentation: String\\n    get() = this.toString()\\n    set(value) {\\n        setDataFromString(value) // parses the string and assigns values to other properties\\n    }\\n\")), mdx(\"p\", null, \"\\uADF8\\uB798\\uC11C list\\uB97C \\uB9CC\\uB4E4\\uC5B4 \\uC21C\\uC11C\\uB300\\uB85C \\uB3D9\\uC791\\uD558\\uAC8C \\uD558\\uACE0 \\uC2F6\\uC744\\uB54C\\uC5D0 \\uD55C\\uB3D9\\uC791\\uC744 \\uC644\\uB8CC\\uD558\\uACE0 \\uB09C\\uD6C4, \\uD574\\uB2F9\\uD558\\uB294 \\uB3D9\\uC791\\uC744 list\\uC5D0\\uC11C \\uC81C\\uAC70\\uD558\\uACE0\\n\\uBCC0\\uC218\\uC5D0 \\uB2F4\\uC544 \\uADF8 \\uBCC0\\uC218\\uB97C set\\uD558\\uBA74 \\uC790\\uC5F0\\uC2A4\\uB7FD\\uAC8C \\uB2E4\\uC74C \\uB3D9\\uC791\\uC73C\\uB85C \\uB118\\uC5B4\\uAC00\\uAC8C \\uB41C\\uB2E4. \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-koltin\"\n  }, \"private val sequenceList = mutableListOf(1,2,3,4,5)\\n\\nfun main() {\\n    println(\\\"Hello, world!!!\\\")\\n    println(sequenceList)\\n    nextStepTrigger()\\n    nextStepTrigger()\\n    nextStepTrigger()\\n    nextStepTrigger()\\n    nextStepTrigger()\\n}\\n\\nprivate var provisioningStep: Int = 0\\n    set(nextStep){\\n        field = nextStep\\n        println(\\\"nextStep= $nextStep\\\")\\n    }\\n    \\n fun nextStepTrigger(){\\n     if(sequenceList.isNotEmpty()){\\n         provisioningStep = sequenceList.removeAt(0)\\n     }\\n }\\n\")), mdx(\"p\", null, \"\\uC774\\uB807\\uAC8C \\uC2E4\\uD589\\uD558\\uAC8C \\uB418\\uBA74 \\uACB0\\uACFC\\uAC12\\uC740  \\uC774\\uB807\\uAC8C \\uB41C\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"[1, 2, 3, 4, 5]\\nnextStep= 1\\nnextStep= 2\\nnextStep= 3\\nnextStep= 4\\nnextStep= 5\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"List를 만들고 List에 들어있는 순서대로 코드를 진행하고싶을때 Java에서는 다음 index를 사용하기 위해 for문을 돌리거나 while문을 돌린다.\nkoltin에서는 get/set 함수를 내부적으로 생성해주기 떄문에 따로 getter…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/kotlin-set","formatString":"DD.MM.YYYY"}},
    "staticQueryHashes": ["2744905544","3090400250","318001574"]}